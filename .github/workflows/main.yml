name: Bitrise

on:
  pull_request:
    types: [labeled, synchronize]

jobs:
  staging-build:
    # 'QA'ラベルが追加されたとき or 'QA'ラベルが付いたPull Requestに新たなcommitが追加されたとき or 'QA'ラベルが付いたPull Requestのbase branchが変わったとき
    if: github.event.label.name == 'QA' || (github.event.action == 'synchronize' && contains(github.event.pull_request.labels.*.name, 'QA'))
    runs-on: ubuntu-latest
    steps:
      # CircleCI APIを叩く
      - name: Call CircleCI API
        id: call_circleci_api
        env:
          CIRCLE_TOKEN: ${{ secrets.CIRCLE_TOKEN }}
        run: |
          response=$(curl --header "Content-Type: application/json" --data "{\"build_parameters\": {\"BUILD_FLAVOR\": \"staging\", \"BUILD_TYPE\": \"proguardDebug\"}}" --request POST "https://circleci.com/api/v1.1/project/github/tdrk18/BitBox/tree/main?circle-token=${CIRCLE_TOKEN}")
          build_url=$(echo $response | jq -r '.build_url')
          echo "::set-output name=build_url::$build_url"

      # 実行結果をPull Requestにコメントする
      - name: Post comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'QAビルドの作成を開始しました\n${{ steps.call_circleci_api.outputs.build_url }}\n',
            });
