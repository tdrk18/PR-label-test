name: Bitrise

on:
  pull_request:
    types: [labeled, synchronize]

jobs:
  staging-build:
    # 'QA'ラベルが追加されたとき or 'QA'ラベルが付いたPull Requestに新たなcommitが追加されたとき or 'QA'ラベルが付いたPull Requestのbase branchが変わったとき
    if: github.event.label.name == 'QA' || contains(github.event.pull_request.labels.*.name, 'QA')
    runs-on: ubuntu-latest
    steps:
      # Bitrise APIを叩く
      - name: Call bitrise API
        id: call_bitrise_api
        env:
          BITRISE_SLUG: ${{ secrets.BITRISE_SLUG }}
          BITRISE_TOKEN: ${{ secrets.BITRISE_TOKEN }}
        run: |
          echo "${{ github.event.name }}"
          echo "::set-output name=result::$(curl -X POST "https://api.bitrise.io/v0.1/apps/${BITRISE_SLUG}/builds" -H "accept: application/json" -H "Authorization: ${BITRISE_TOKEN}" -H "Content-Type: application/json" -d "{ \"build_params\": { \"branch\": \"${{ github.event.pull_request.head.ref }}\", \"workflow_id\": \"staging\" }, \"hook_info\": { \"type\": \"bitrise\" }}")"
      
      # Bitrise APIの実行結果をPull Requestにコメントする
      - name: Post comment
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'bitrise API実行結果\n```\n${{ steps.call_bitrise_api.outputs.result }}\n```',
            });
